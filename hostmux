#!/bin/sh

# Keybinding suggestions for .tmux.conf:
#   bind-key a set-window-option synchronize-panes (see also -S)
#   bind-key X kill-session

USAGE="hostmux [-hxpS] [-l <tmux layout>] [-s <session name>] HOST_A [, HOST_B, HOST_N]"

# Default Settings
SESSION_NAME=hostmux
LAYOUT=even-vertical
CLOSE=
SETPROMPT=false
SYNCPANES=false

# Get optional user settings
while getopts s:l:hxpS opt; do
    case $opt in
    s)     SESSION_NAME=$OPTARG
           ;;
    l)     LAYOUT=$OPTARG
           ;;
    x)     CLOSE=" && exit"
           ;;
    p)     SETPROMPT=true
           ;;   
    S)     SYNCPANES=true
           ;;   
    h)     echo $USAGE
           exit 0
           ;;
    '?')   echo "$0: invalid option -$OPTARG" >&2
           echo $USAGE >&2
           exit 1
           ;;
esac done
shift $((OPTIND - 1))

# The actual script
NUMBER_OF_HOSTS=$#

# Initialize Session
tmux -2 new-session -d -s $SESSION_NAME

# Split as many times as we have hosts as arguments and reset
# the layout each time for even distribution
LOOP_INDEX=1

while [ $LOOP_INDEX -lt $NUMBER_OF_HOSTS ]; do
    tmux split-window -h -d
    tmux select-layout $LAYOUT
    LOOP_INDEX=$(($LOOP_INDEX+1))
done


# Check what pane-base-index is configured and use it for addressing
# the panes
PANE_INDEX=$(tmux show-window-options -g -v pane-base-index)
PANE_MAX=$(($PANE_INDEX+$NUMBER_OF_HOSTS-1))

# Loop through the panes and take the first argument as a ssh host
# then shift the argument list left, increase the index and go
# into next iteration. Now $1 refers to the next argument passed
# to the script
while [ $PANE_INDEX -le $PANE_MAX ]; do
    tmux send-keys -t $PANE_INDEX "ssh $1 $CLOSE" C-m
    if $SETPROMPT; then
        tmux send-keys -t $PANE_INDEX "export PS1='[\\u@$1 \\w]$ '" C-m
    fi
    shift
    PANE_INDEX=$(($PANE_INDEX+1))
done

if $SYNCPANES; then
    tmux set-window-option synchronize-panes on
fi

# Attach to the session
tmux -2 attach-session -t $SESSION_NAME
